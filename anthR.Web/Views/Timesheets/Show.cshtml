@model IEnumerable<anthR.Web.Models.Core.MasterSite>

@{
    if (!string.IsNullOrEmpty(Request["email"]))
    {
        Layout = null;
    }
    decimal displayTotalHours = 0;
    int totalHours = 0;
    int totalMins = 0;
    int totalIncome = 0;
    double totalQuoted = 0;
    double total = 0;

    int month = int.Parse(Request["month"].ToString());
    int year = DateTime.UtcNow.Year;
    if (Request["year"] != null)
    {
        year = int.Parse(Request["year"].ToString());
    }

    int daysInMonth = DateTime.DaysInMonth(year, month);
    DateTime startDate = new DateTime(year, month, 1);
    DateTime endDate = new DateTime(year, month, daysInMonth, 23, 59, 59);

}

@if (!string.IsNullOrEmpty(Request["email"])){
    <style>            
        .email .hide-me, .email .hide-site{
            display: none;
        }
    </style>
}

@if (string.IsNullOrEmpty(Request["email"]))
{
    <div class="row">
        <div class="col-sm-6">
            <form class="form-inline">
                <div class="form-group">
                    <label>Email To:</label>
                    @Html.DropDownList("StaffId", (SelectList)ViewBag.Staff, "Please Select", htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="chkCopyMeIn" /> Copy me in
                    </label>
                </div>
                @Html.RawActionLink("<i class=\"glyphicon glyphicon-send\"></i> Send Email", "EmailTimesheet", "Timesheets",
                new { controller = "Timesheets", month = month, year = year, email = "yes" },
                new { @class = "btn btn-sm btn-primary", target = "_blank", id = "emailLink" })
            </form>
        </div>
        <div class="col-sm-6">
            <form class="form-inline pull-right" method="get" action="/Timesheets/Show">
                <div class="form-group">
                    <label>Show Month:</label>
                    @{ Html.RenderPartial("_MonthsDropDown");}
                </div>
                <button class="btn btn-sm btn-primary" type="submit"><i class="glyphicon glyphicon-refresh"></i> Change Month</button>
            </form>
        </div>

     </div>
}

<ul style="margin-left: 0; padding-left: 0; list-style: none;" class="@(!string.IsNullOrEmpty(Request["email"]) ? "email": "")">

    @foreach (var item in Model)
    {

        totalHours = 0;
        totalMins = 0;
        totalIncome = 0;
        totalQuoted = 0;

        var hasVat = item.HasVAT;
        bool hideSite = false;
        string hideClass = string.Empty;
        int hiddenProjectCount = item.Projects.Where(p => p.HideFromTimesheet.HasValue && p.HideFromTimesheet.Value && p.Tasks.Where(t => t.Timesheet.Where(ts => ts.DateRecorded >= startDate && ts.DateRecorded <= endDate && ts.Staff.Username.Equals(User.Identity.Name)).Any()).Any()).Count();
        int projectCount = item.Projects.Where(p => p.Tasks.Where(t => t.Timesheet.Where(ts => ts.DateRecorded >= startDate && ts.DateRecorded <= endDate && ts.Staff.Username.Equals(User.Identity.Name)).Any()).Any()).Count();
        if (hiddenProjectCount == projectCount)
        {
            hideClass = "hide-site";
        }

        <li style="margin-top: 10px; border-top: solid 1px #999;" class="site @hideClass"
            data-projectcount="@projectCount" data-hiddenprojectcount="@hiddenProjectCount">
            <h4>@item.Name</h4>
            <ul>
                @if (item.Projects.Any())
                {
                    foreach (var project in item.Projects.Where(p => p.Tasks.Where(t => t.Timesheet.Where(ts => ts.DateRecorded >= startDate && ts.DateRecorded <= endDate && ts.Staff.Username.Equals(User.Identity.Name)).Any()).Any()))
                    {
                        <li style="border: none;" class="@(project.HideFromTimesheet.HasValue ? project.HideFromTimesheet.Value ? "project hide-me" : "project" : "project")">
                            @project.Name <a href="#" data-type="1" data-id="@project.Id" data-hidden="@project.HideFromTimesheet" class="hide-me" title="Hide Project from email"><i class="glyphicon @(project.HideFromTimesheet.HasValue ? project.HideFromTimesheet.Value ? "glyphicon-eye-close" : "glyphicon-eye-open" : "glyphicon-eye-open")"></i></a>
                            @if (project.Quoted > 0)
                            {
                                if (project.DateCompleted.HasValue)
                                {
                                    <strong style="color: green;">Status: Completed</strong>
                                    totalQuoted += project.Quoted;
                                }
                                else
                                {
                                    <strong style="color: red;">Status: Awaiting Completion</strong>
                                }
                                <br /><span><strong>Project Quoted @@ @project.Quoted.ToString("C") @(hasVat ? "+ VAT" : "") @(project.AlreadyBilled ? "Already Billed" : "Not Billed")</strong></span>
                            }
                            <ul>
                                @if (project.Tasks.Any())
                                {
                                    foreach (var task in project.Tasks.Where(t => t.Timesheet.Where(ts => ts.DateRecorded >= startDate && ts.DateRecorded <= endDate && ts.Staff.Username.Equals(User.Identity.Name)).Any()))
                                    {
                                        <li style="border: none;" class="@(task.HideFromTimesheet.HasValue ? task.HideFromTimesheet.Value ? "hide-me" : "" : "")">
                                            @task.Name <strong style="color: @(task.DateCompleted.HasValue ? "green": "red")">Status: @(task.DateCompleted.HasValue ? "Completed" : "Awaiting Completion")</strong>
                                            <a href="#" data-type="2" data-id="@task.Id" data-hidden="@task.HideFromTimesheet" class="hide-me" title="Hide Task from email"><i class="glyphicon @(task.HideFromTimesheet.HasValue ? task.HideFromTimesheet.Value ? "glyphicon-eye-close" : "glyphicon-eye-open" : "glyphicon-eye-open")"></i></a>
                                            <ul>
                                                @if (task.Timesheet.Any())
                                                {
                                                    foreach (var timesheet in task.Timesheet.Where(ts => ts.DateRecorded >= startDate && ts.DateRecorded <= endDate && ts.Staff.Username.Equals(User.Identity.Name)))
                                                    {
                                                        <li class="@(timesheet.HideFromTimesheet.HasValue ? timesheet.HideFromTimesheet.Value ? "hide-me" : "" : "")">
                                                            @if (timesheet.Quoted.Equals(0) && timesheet.AnthRTask.Project.Quoted.Equals(0))
                                                            {
                                                                <span title="@timesheet.Id">@timesheet.Hours hours@(timesheet.Mins > 0 ? " " + timesheet.Mins + " mins" : "") @@ @timesheet.HourlyRate.ToString("C")</span>
                                                                totalHours += timesheet.Hours;
                                                                totalMins += timesheet.Mins;
                                                                totalIncome += (timesheet.Hours * timesheet.HourlyRate);
                                                                // calculate mins and add on
                                                                if (timesheet.Mins > 0)
                                                                {
                                                                    totalIncome += Convert.ToInt32(Math.Ceiling((Convert.ToDecimal(timesheet.HourlyRate) / (60 / timesheet.Mins))));
                                                                }
                                                            }
                                                            else if (timesheet.AnthRTask.Project.Quoted.Equals(0))
                                                            {
                                                                <span>Quoted @timesheet.Quoted.ToString("C") @(hasVat ? "+ VAT" : "") <strong>@(timesheet.AlreadyBilled ? "Already Billed" : "Not Billed")</strong></span>
                                                                totalQuoted += timesheet.Quoted;
                                                            }
                                                            else
                                                            {
                                                                <span title="@timesheet.Id">@timesheet.Hours hours@(timesheet.Mins > 0 ? " " + timesheet.Mins + " mins" : "")</span>
                                                                //totalHours += timesheet.Hours + timesheet.Mins;
                                                                totalHours += timesheet.Hours;
                                                                totalMins += timesheet.Mins;
                                                            }
                                                            @*<a href="/Timesheets/Delete/@timesheet.Id" class="btn btn-xs"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>*@
                                                            <a href="/Timesheets/Edit/@timesheet.Id" class="btn btn-xs" title="Edit Timesheet Entry"><i class="glyphicon glyphicon-pencil"></i></a>
                                                            <a href="#" data-type="3" data-id="@timesheet.Id" data-hidden="@timesheet.HideFromTimesheet" class="hide-me" title="Hide Time from email"><i class="glyphicon @(timesheet.HideFromTimesheet.HasValue ? timesheet.HideFromTimesheet.Value ? "glyphicon-eye-close" : "glyphicon-eye-open" : "glyphicon-eye-open")"></i></a>
                                                        </li>
                                                    }
                                                }
                                            </ul>



                                        </li>
                                    }
                                }
                            </ul>
                        </li>
                    }
                }

            </ul>

            <br />
            <i>
                @if (totalMins > 0)
                {
                    displayTotalHours = (decimal)totalHours + ((decimal)totalMins / 60);
                }
                else
                {
                    displayTotalHours = totalHours;
                }
                <strong>Total Hours: @displayTotalHours.ToString("#.##")</strong> /
                <strong>Total Hourly Income: @totalIncome.ToString("C")</strong> /
                <strong>Total Quoted: @totalQuoted.ToString("C")</strong> /
                <strong>Total Income: @((totalQuoted + Convert.ToDouble(totalIncome)).ToString("C"))</strong>
            </i>

        </li>

        total += totalQuoted + Convert.ToDouble(totalIncome);

    }

</ul>



<h4 style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #999;" class="text-right">
    Overall Total: @total.ToString("C")
</h4>

        @section scripts{

            <script>
                $(function () {

                    $(document).on('click', '#emailLink', function (e) {

                        var url = $('#emailLink').attr('href');
                        var selectedEmail = $('#StaffId').val();
                        url = url.replace(/(email=)[^\&]+/, '$1' + selectedEmail);
                        url = url.replace(/(&me=)[^\&]+/, '');
                        if ($('#chkCopyMeIn').is(':checked')) {
                            url = url + '&me=1';
                        }
                        else {
                            url = url + '&me=0';
                        }
                        $('#emailLink').attr('href', url);

                        if ($('#StaffId').val() === '') {
                            e.preventDefault();
                            alert("Please Select an email.");
                            return false;
                        }

                    });

                    $(document).on('click', '.hide-me', function (e) {

                        e.preventDefault();
                        e.stopPropagation();
                                                
                        var $this = $(this);

                        // handle the data
                        var hidden = $this.data().hidden;

                        if (hidden === ''){
                            hidden = 'false';
                        }

                        // post to the API to set the DB value
                        $.post('/api/timesheet', { Id: $this.data().id, Type: $this.data().type, Hide: hidden }, function () {

                        }).done(function (data, textStatus, xhr) {

                            // check the status code
                            switch (xhr.status) {
                                case 200:
                                    // everything is fine and dandy!

                                    // handle the UI                        
                                    switch (hidden.toLowerCase()) {                                       
                                        case "false":
                                            // remove glyphicon-eye-open
                                            // add glyphicon-eye-close
                                            $this.children('i').removeClass('glyphicon-eye-open').addClass('glyphicon-eye-close');
                                            $this.data('hidden', 'true');
                                            $this.parent('li').addClass('hide-me');

                                            if ($this.parent('li').hasClass('project')) {
                                                $this.parents('.site').data('hiddenprojectcount', $this.parents('.site').data('hiddenprojectcount') + 1);
                                            }                                            

                                            break;
                                        case "true":
                                            // remove glyphicon-eye-close
                                            // add glyphicon-eye-open
                                            $this.children('i').removeClass('glyphicon-eye-close').addClass('glyphicon-eye-open');
                                            $this.data('hidden', 'false');
                                            $this.parent('li').removeClass('hide-me');

                                            if ($this.parent('li').hasClass('project')) {
                                                $this.parents('.site').data('hiddenprojectcount', $this.parents('.site').data('hiddenprojectcount') - 1);
                                            }

                                            break;
                                    }

                            }

                            var projectCount = $this.parents('.site').data('projectcount');
                            var projectHiddenCount = $this.parents('.site').data('hiddenprojectcount');
                            if (projectCount == projectHiddenCount) {
                                // hidden project count is the same as project count. so hide site
                                $this.parents('.site').addClass('hide-site');
                            }
                            else {
                                $this.parents('.site').removeClass('hide-site');
                            }

                        });

                                                
                    });

                });
            </script>
        }
